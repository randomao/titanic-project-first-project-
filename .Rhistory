getwd()
?read.csv
train <- read.csv(file = 'train.csv', header = T)
str(train)
train <- read.csv(file = 'train.csv', header = T, stringsAsFactors = F)
str(train)
View(train)
?table
table(subset(train, Sex == 'male')$Survived) %>% prop.table()
library(dplyr)
# Load packages
library(plyr)
library(dplyr)
library(ggplot2)
table(subset(train, Sex == 'male')$Survived) %>% prop.table()
table(subset(train, Sex == 'female')$Survived) %>% prop.table()
?geom_histogram
ggplot(data = train, aes(x = Age, group = facotr(Survived))) + geom_histogram(binwidth = 5)
ggplot(data = train, aes(x = Age, group = factor(Survived))) + geom_histogram(binwidth = 5)
ggplot(data = train, aes(x = Age, group = factor(Survived))) + geom_density()
ggplot(data = train, aes(x = Age, colour = factor(Survived))) + geom_density()
ggplot(data = train, aes(x = Age, colour = interaction(Sex, Survived))) + geom_density()
?regex
?gsub
source('~/Personal Projects/Kaggle/Titanic/titanic/(1)exploratory.R', echo=TRUE)
table(is.na(train$PassengerId))
table(is.na(train$Pclass))
table(is.na(train$Name))
table(is.na(train$Sex))
table(is.na(train))
str(train)
?gsub
gsub("([ab])", "\\1_\\1_", "abc and ABC")
?substr
?strsplit
str(train)
table(is.na(train$SibSp))
table(is.na(train$Age))
table(is.na(train$Fare))
table(is.na(train$Cabin))
table(is.na(train$Embarked))
table(train$Cabin == "")
txt <- c("The", "licenses", "for", "most", "software", "are",
"designed", "to", "take", "away", "your", "freedom",
"to", "share", "and", "change", "it.",
"", "By", "contrast,", "the", "GNU", "General", "Public", "License",
"is", "intended", "to", "guarantee", "your", "freedom", "to",
"share", "and", "change", "free", "software", "--",
"to", "make", "sure", "the", "software", "is",
"free", "for", "all", "its", "users")
grep("[gu]", txt)
i <- grep("[gu]", txt)
txt[i]
i <- gregexpr("[gu]", txt)
txt[i]
i <- grepexpr("e", txt)
i <- gregexpr("e", txt)
txt[i]
i
head(i)
x <- "http://stat.umn.edu:80/xyz"
m <- regexec("^(([^:]+)://)?([^:/]+)(:([0-9]+))?(/.*)", x)
m
x <- "http://stat.umn.edu:80/xyz"
m <- regexec("^(([^:]+)://)?([^:/]+)(:([0-9]+))?(/.*)", x)
m
regmatches(x, m)
URL_parts <- function(x) {
m <- regexec("^(([^:]+)://)?([^:/]+)(:([0-9]+))?(/.*)", x)
parts <- do.call(rbind,
lapply(regmatches(x, m), `[`, c(3L, 4L, 6L, 7L)))
colnames(parts) <- c("protocol","host","port","path")
parts
}
URL_parts(x)
source('~/Personal Projects/Kaggle/Titanic/titanic/(1)exploratory.R', echo=TRUE)
source('~/Personal Projects/Kaggle/Titanic/titanic/(1)exploratory.R', echo=TRUE)
x <- train[title == 'Master',]
x <- train[,title == 'Master']
x <- subset(train,title == 'Master')
with(x, max(Age))
View(x)
x <- subset(train,title == 'Master' & !is.na(Age))
max(x$Age)
train <- mutate(train, child = ifelse(Age <= 12, 1, 0))
train[is.na(train$Age) & title == 'Master', 'child'] <- 1
?detach
detach('package:data.table')
train[is.na(train$Age) & title == 'Master', 'child'] <- 1
str(train)
unique(train$title)
train[is.na(train$Age) & train$title == 'Master', 'child'] <- 1
x <- subset(train, Age <= 12 & Sex == 'female')
unique(x$title)
train_m <- subset(train, Sex == 'male')
train_m <- subset(train, Sex == 'male') %>% mutate(., child = ifelse(Age <= 12, 1, 0))
train_m[is.na(train_m$Age) & train_m$title == 'Master', 'child'] <- 1
train_m[is.na(train_m$Age) & train_m$title != 'Master', 'child'] <- 0
table(is.na(train_m$child))
d <- subset(train_m, Sex == 'male') %>%
ddply(., .(Pclass, child), summarise, P_survive = mean(Survived), num_pass = length(unique(PassengerId)))
d
train_f3 <- subset(train, Sex == 'female' & Pclass == 3) %>% mutate(., child = ifelse(Age <= 12, 1, 0))
table(is.na(train_f3$Age))
d <- ddply(train_f3, .(child), summarise, P_survive = mean(Survived), num_pass = length(unique(PassengerId)))
subset(d, !is.na(child))
d <- ddply(train, .(Pclass, Sex), summarise, P_survive = mean(Survived), num_pass = length(unique(PassengerId)))
d
d <- ddply(train, .(Pclass, Sex, Embarked), summarise, P_survive = mean(Survived), num_pass = length(unique(PassengerId)))
ggplot(data = d, aes(x = interaction(Pclass, Sex))) +
geom_line(aes(y = P_survive, size = num_pass, colour = factor(Embarked)))
library(plyr)
library(dplyr)
library(ggplot2)
install.packages('dplyr')
install.packages("dplyr")
install.packages("installr")
updateR()
require(installr)
updateR()
update.packages()
update.packages(ask = FALSE)
d <- ddply(train, .(Pclass, Sex, Embarked), summarise, P_survive = mean(Survived), num_pass = length(unique(PassengerId)))
ggplot(data = d, aes(x = interaction(Pclass, Sex))) +
geom_line(aes(y = P_survive, size = num_pass, colour = factor(Embarked)))
library(plyr)
library(dplyr)
library(ggplot2)
update.packages(ask = FALSE)
library(plyr)
library(dplyr)
library(ggplot2)
source('~/Personal Projects/Kaggle/Titanic/titanic/(1)exploratory.R', echo=TRUE)
# =================================================================================
# [H]: Port of embarkation should make no difference to survival
d <- ddply(train, .(Pclass, Sex, Embarked), summarise, P_survive = mean(Survived), num_pass = length(unique(PassengerId)))
ggplot(data = d, aes(x = interaction(Pclass, Sex))) +
geom_point(aes(y = P_survive, size = num_pass, colour = factor(Embarked)))
d4 <- subset(train, child == 0) %>%
ddply(., .(Pclass, Sex, Embarked), summarise, P_survive = mean(Survived), num_pass = length(unique(PassengerId)))
head(train)
# =================================================================================
# Children vs adults
# [H]: Male children (defined as age 12 and below) have a much better chance of survival than male adults
train %<>% mutate(., child = ifelse(Age <= 12, 1, 0))
d4 <- subset(train_m, child == 0) %>%
ddply(., .(Pclass, Sex, Embarked), summarise, P_survive = mean(Survived), num_pass = length(unique(PassengerId)))
ggplot(data = d4, aes(x = interaction(Pclass, Sex))) +
geom_point(aes(y = P_survive, size = num_pass, colour = factor(Embarked)))
d4 <- ddply(train, .(Pclass, Sex, Embarked), summarise, P_survive = mean(Survived), num_pass = length(unique(PassengerId)))
ggplot(data = d4, aes(x = interaction(Pclass, Sex))) +
geom_point(aes(y = P_survive, size = num_pass, colour = factor(Embarked)))
head(train_m)
d5 <- subset(train_m, child ==0) %>% mutate(., family = ifelse((SibSp == 1 | Parch == 1), 1, 0)) %>%
ddply(., .(Pclass, family), summarise, P_survive = mean(Survived), num_pass = length(unique(PassengerId)))
d5
d6 <- subset(train_m, child ==0) %>% mutate(., parent = ifelse(Parch == 1, 1, 0)) %>%
ddply(., .(Pclass, parent), summarise, P_survive = mean(Survived), num_pass = length(unique(PassengerId)))
d6
d2 <- ddply(train_m, .(Pclass, child), summarise, P_survive = mean(Survived), num_pass = length(unique(PassengerId)))
d2
d6 <- subset(train_m, child ==0) %>%
ddply(., .(Pclass, Parch, Sibsp), summarise, P_survive = mean(Survived), num_pass = length(unique(PassengerId)))
d6
d6 <- subset(train_m, child ==0) %>%
ddply(., .(Pclass, Parch, SibSp), summarise, P_survive = mean(Survived), num_pass = length(unique(PassengerId)))
d6
d6 <- subset(train_m, child ==0) %>%
ddply(., .(Pclass, Parch), summarise, P_survive = mean(Survived), num_pass = length(unique(PassengerId)))
d6
d6 <- subset(train_m, child ==0) %>% mutate(., parent = Parch > 0)
ddply(., .(Pclass, Parch), summarise, P_survive = mean(Survived), num_pass = length(unique(PassengerId)))
d6
d6 <- subset(train_m, child ==0) %>% mutate(., parent = Parch > 0) %>%
ddply(., .(Pclass, Parch), summarise, P_survive = mean(Survived), num_pass = length(unique(PassengerId)))
d6
d6 <- subset(train_m, child ==0) %>% mutate(., parent = Parch > 1) %>%
ddply(., .(Pclass, parent), summarise, P_survive = mean(Survived), num_pass = length(unique(PassengerId)))
d6
d2
d7 <- subset(train_m, child == 0) %>% mutate(., sib = SibSp > 1) %>%
ddply(., .(Pclass, sib), summarise, P_survive = mean(Survived), num_pass = length(unique(PassengerId)))
d7
d8 <- subset(train_m, child == 0) %>% mutate(., sib = SibSp > 1, parent = Parch > 1) %>%
ddply(., .(Pclass, sib, parent), summarise, P_survive = mean(Survived), num_pass = length(unique(PassengerId)))
d8
d6 <- subset(train_m, child ==0) %>% mutate(., parent = Parch > 0) %>%
ddply(., .(Pclass, parent), summarise, P_survive = mean(Survived), num_pass = length(unique(PassengerId)))
d6
d7 <- subset(train_m, child == 0) %>% mutate(., sib = SibSp > 0) %>%
ddply(., .(Pclass, sib), summarise, P_survive = mean(Survived), num_pass = length(unique(PassengerId)))
d7
d8 <- subset(train_m, child == 0) %>% mutate(., sib = SibSp > 0, parent = Parch > 0) %>%
ddply(., .(Pclass, sib, parent), summarise, P_survive = mean(Survived), num_pass = length(unique(PassengerId)))
d8
subset(d8, num_pass > 10)
d2
subset(d2, child == 0)
d6 <- subset(train_m, child == 0) %>% mutate(., sib = SibSp > 0, parent = Parch > 0) %>%
ddply(., .(Pclass, sib, parent), summarise, P_survive = mean(Survived), num_pass = length(unique(PassengerId)))
subset(d6, num_pass > 10)
rm(d6, d7, d8)
d6 <- subset(train_m, child == 0) %>% mutate(., sib = SibSp > 0, parent = Parch > 0) %>%
ddply(., .(Pclass, sib, parent), summarise, P_survive = mean(Survived), num_pass = length(unique(PassengerId)))
subset(d6, num_pass > 10)
d5
d5 <- subset(train_m, child ==0) %>% mutate(., family = ifelse((SibSp > 0 | Parch >0), 1, 0)) %>%
ddply(., .(Pclass, family), summarise, P_survive = mean(Survived), num_pass = length(unique(PassengerId)))
d5
d2
x <- subset(train_m, Pclass == 3 & child == 1)
table(x$Parch)
ddply(x, .(Parch), summarise, P_chance = mean(Survive))
head(x)
ddply(x, .(Parch), summarise, P_chance = mean(Survived))
View(train_m)
View(subset(train_m, Parch == 3))
View(subset(train_m, Parch == 2))
unique(train_m$Parch)
View(subset(train_m, Parch == 5))
View(subset(train_m, Parch == 5))
View(subset(train_m, Parch == 2))
subset(d6, num_pass > 10)
d6 <- subset(train_m, child == 0) %>% mutate(., sibsp = SibSp > 0, parent = Parch > 0) %>%
ddply(., .(Pclass, sib, parent), summarise, P_survive = mean(Survived), num_pass = length(unique(PassengerId)))
subset(d6, num_pass > 10)
d6 <- subset(train_m, child == 0) %>% mutate(., sibsp = SibSp > 0, parent = Parch > 0) %>%
ddply(., .(Pclass, sibsp, parent), summarise, P_survive = mean(Survived), num_pass = length(unique(PassengerId)))
subset(d6, num_pass > 10)
d7 <- subset(train_m, child == 0 & SibSp == 0 & Parch == 0) %>% mutate(., age_range = ceiling(Age/10) * 10) %>%
ddply(., .(Pclass, age_range), summarise, P_survive = mean(Survived), num_pass = length(unique(PassengerId)))
ggplot(data = d7, aes(x = age_range, colour = factor(Pclass))) + geom_line(aes(y = P_survive))
ggplot(data = d7, aes(x = age_range, colour = factor(Pclass))) + geom_line(aes(y = P_survive)) +
geom_point(aes(y = P_survive, size = num_pass))
d2
train_m_a <- subset(train_m, child == 0 & SibSp == 0 & Parch == 0) %>% mutate(., age_range = ceiling(Age/10) * 10) %>%
ddply(., .(Pclass, age_range), summarise, P_survive = mean(Survived), num_pass = length(unique(PassengerId)))
ggplot(data = train_m_a, aes(x = age_range, colour = factor(Pclass))) + geom_line(aes(y = P_survive)) +
geom_point(aes(y = P_survive, size = num_pass))
source('~/Personal Projects/Kaggle/Titanic/titanic/(1)exploratory.R', echo=TRUE)
train_m_1f <- subset(train_m, Pclass == 1 & !(child == 0 & SibSp == 0 & Parch == 0)) %>%
mutate(., age_range = ceiling(Age/10) * 10)
train_m_1f <- subset(train_m, Pclass == 1 & !(child == 0 & SibSp == 0 & Parch == 0)) %>%
mutate(., age_range = ceiling(Age/10) * 10) %>%
ddply(., .(Pclass, age_range), summarise, P_survive = mean(Survived), num_pass = length(unique(PassengerId)))
ggplot(data = train_m_1f, aes(x = age_range, colour = factor(Pclass))) + geom_line(aes(y = P_survive)) +
geom_point(aes(y = P_survive, size = num_pass))
